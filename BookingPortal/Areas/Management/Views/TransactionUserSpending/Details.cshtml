@{
    ViewBag.Title = Helper.Page.MetaSEO.MetaTitle;
}
@using WebCore.Entities;
@using WebCore.Services;
@using WebCore.Model.Enum;

@model WebCore.Entities.TransactionUserSpendingResult

@{
    try
    {
        string id = "";
        string title = "";
        string summary = "";
        double amount = 0;
        string supplierCodeId = "";
        string customerCodeId = "";
        string createdBy = "";
        string createdDate = "";
        string createdFullDate = "";
        string enabled = "";
        int transactionType = -1;
        string strTransactionType = "";
        string customerName = "";
        string supplierName = "";


        if (Model != null)
        {
            id = Model.ID;
            title = Model.Title;
            summary = Model.Summary;
            amount = Model.Amount;
            supplierCodeId = Model.UserIDReceived;
            customerCodeId = Model.CustomerID;
            createdBy = Model.CreatedBy;
            createdDate = Model.CreatedDate;
            createdFullDate = Model.CreatedFullDate;
            createdBy = Model.CreatedBy;
            createdDate = Model.CreatedDate;
            enabled = "None";
            if (Model.Enabled == (int)ModelEnum.Enabled.ENABLED)
            {
                enabled = "ENABLED";
            }
            else if (Model.Enabled == (int)ModelEnum.Enabled.DISABLE)
            {
                enabled = "DISABLE";
            }

            if (transactionType == 1)
            {
                strTransactionType = "Nhận";
            }
            else
            {
                strTransactionType = "Chuyển";
            }
            //
            SupplierService supplierService = new SupplierService();
            var supplier = supplierService.GetSupplierModel(Model.UserIDSend);
            if (supplier != null)
            {
                supplierName = supplier.Title;
            }

            CustomerService customerService = new CustomerService();
            var customer = customerService.GetCustomerModel(Model.CustomerID);
            if (customer != null)
            {
                customerName = customer.Title;
            }
        }

        <div class="row">
            <div class="col-md-8">
                <div class="top-pic">
                    <i class="fas fa-file-invoice"></i>&nbsp;<label>Thông tin:</label>
                </div>
                <div class="form-group"><i class="fas fa-check-circle"></i> Tiêu đề: @title</div>
                <div class="form-group"><i class="fas fa-check-circle"></i> Mô tả: @summary</div>
                <div class="top-pic">
                    <i class="fas fa-file-invoice"></i>&nbsp;<label>Giao dịch:</label>
                </div>
                <div class="form-group"><i class="fas fa-check-circle"></i> Mã giao dịch: @id</div>
                <div class="form-group"><i class="fas fa-check-circle"></i> Chuyển từ: @supplierCodeId - @supplierName</div>
                <div class="form-group"><i class="fas fa-check-circle"></i> Chuyển đến: @customerCodeId - @customerName</div>
                <div class="form-group"><i class="fas fa-check-circle"></i> Thời gian nhận: @createdFullDate</div>
                <div class="form-group text-right att-data-list">
                    <a href="@Helper.Page.Navigate.PathDataList()">
                        @Helper.Language.Resource.Label.DataList <i class="fas fa-arrow-circle-right"></i>
                    </a>
                </div>
            </div>
        </div>
    }
    catch (Exception)
    {
        @Html.Partial("~/Areas/Template/Views/_ViewNotPageLoadPatial.cshtml", null)
    }
}