@using WebCore.Entities;
@using WebCore.Services;
@using WebCore.ENM;
@using WebCore.Model.Enum;
@using WebCore.Model.Services

@using Helper.Language;
@using Helper.TimeData;
@{
    ViewBag.Title = Helper.Page.MetaSEO.MetaTitle;
}

@model WebCore.Entities.AirAgentResult
<div class="col-md-8">
    @{
        if (Model != null)
        {
            <div class="form-group">
                <h4 style="text-transform:uppercase">ĐẠI LÝ: @Model.Title</h4>
                <hr />
            </div>
            <div class="form-group">
                <i class="fas fa-check-circle"></i> Mã đại lý: @Model.CodeID, Ngày đăng ký: @Model.CreatedDate
            </div>
            <div class="form-group">
                <i class="fas fa-check-circle"></i> Điện thoại: @Model.CompanyPhone, Email: @Model.ContactEmail
            </div>
            <div class="form-group">
                <i class="fas fa-check-circle"></i> Địa chỉ: @Model.Address
            </div>
        }
    }
</div>
<div class="container-fluid">
    <div class="form-group">
        <i class="fas fa-chart-line"></i> Biểu đồ đặt vé (6th):
    </div>
    <div class="form-group" style="overflow:auto">
        <canvas id="line_chart" style="width:100%; height:150px;"></canvas>
    </div>
</div>
@section scripts{
    <script>
        //$(function () {
        //    new Chart($("#line_chart")[0].getContext('2d'), getChartJs('line'));
        //    //new Chart(document.getElementById("bar_chart1").getContext("2d"), getChartJs('bar'));
        //    //new Chart(document.getElementById("radar_chart").getContext("2d"), getChartJs('radar'));
        //    //new Chart(document.getElementById("pie_chart1").getContext("2d"), getChartJs('pie'));
        //    //var json_url = "/team/chart-line.json";
        //});
        $(function () {
            var ctx = $("#line_chart")[0].getContext('2d');
            // examine example_data.json for expected response data
            //var json_url = "/team/chart-line.json";

            // draw empty chart
            var bookingChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: [],
                    datasets: [{
                        label: "Đặt vé",
                        data: [],
                        borderColor: 'rgba(0, 188, 212, 0.75)',
                        backgroundColor: 'rgba(0, 188, 212, 0.3)',
                        pointBorderColor: 'rgba(0, 188, 212, 0)',
                        pointBackgroundColor: 'rgba(0, 188, 212, 0.9)',
                        pointBorderWidth: 1,
                        borderWidth: 1
                    }
                        //    ,
                        //{
                        //    label: "My Second dataset",
                        //    data: [28, 48, 40, 19, 86, 27, 90],
                        //    borderColor: 'rgba(233, 30, 99, 0.75)',
                        //    backgroundColor: 'rgba(233, 30, 99, 0.3)',
                        //    pointBorderColor: 'rgba(233, 30, 99, 0)',
                        //    pointBackgroundColor: 'rgba(233, 30, 99, 0.9)',
                        //    pointBorderWidth: 1
                        //}
                    ]
                },
                options: {
                    responsive: true
                }
            });

            ajax_chart(bookingChart);
            // function to update our chart
            function ajax_chart(chart, url, data) {
                var data = data || {};
                var model = {
                    TimeZoneLocal: LibDateTime.GetTimeZoneByLocal()
                };
                AjaxFrom.POST({
                    url: '/Management/Home-Page/Action/BookingChart',
                    data: model,
                    success: function (response) {
                        if (response != null && response.data != null) {
                            if (response.status == 200) {
                                var data = response.data;
                                chart.data.labels = data.Labels;
                                chart.data.datasets[0].data = data.Datas[0].Quantities; // or you can iterate for multiple datasets
                                chart.update(); // finally update our chart
                                return;
                            }
                        }
                    },
                    error: function (response) {
                        console.log('::' + MessageText.NotService);
                    }
                });


                //$.getJSON(url, data).done(function (response) {
                //    chart.data.labels = response.labels;
                //    chart.data.datasets[0].data = response.data.quantity; // or you can iterate for multiple datasets
                //    chart.update(); // finally update our chart
                //});
            }
        });
    </script>
}